"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const userOrder_controller_1 = require("../controllers/userOrder.controller");
const validateRequest_1 = require("../middlewares/validateRequest");
const userOrder_validation_1 = require("../validations/userOrder.validation");
const authorize_1 = require("../middlewares/authorize");
const checkPermission_1 = require("../middlewares/checkPermission");
const router = (0, express_1.Router)();
router.post("/", (0, validateRequest_1.validateRequest)(userOrder_validation_1.createUserOrderSchema), userOrder_controller_1.createUserOrder);
router.get("/", authorize_1.isAuthenticated, (0, checkPermission_1.checkDynamicPermission)(), userOrder_controller_1.getAllUserOrders);
router.get("/:id", authorize_1.isAuthenticated, (0, checkPermission_1.checkDynamicPermission)(), userOrder_controller_1.getUserOrder);
router.put("/:id", authorize_1.isAuthenticated, (0, checkPermission_1.checkDynamicPermission)(), (0, validateRequest_1.validateRequest)(userOrder_validation_1.updateUserOrderSchema), userOrder_controller_1.updateUserOrder);
router.delete("/:id", userOrder_controller_1.deleteUserOrder);
router.patch("/:id/extend", (0, validateRequest_1.validateRequest)(userOrder_validation_1.extendUserOrderSchema), userOrder_controller_1.extendUserOrder);
router.post("/:id/checked", authorize_1.isAuthenticated, (0, checkPermission_1.checkDynamicPermission)(), (0, validateRequest_1.validateRequest)(userOrder_validation_1.confirmUserOrderSchema), userOrder_controller_1.confirmUserOrder);
router.patch("/:id/ready", authorize_1.isAuthenticated, userOrder_controller_1.markOrderReadyForPickup);
router.patch("/:id/reject", authorize_1.isAuthenticated, userOrder_controller_1.rejectUserOrder);
router.post("/:id/return-check", authorize_1.isAuthenticated, (0, checkPermission_1.checkDynamicPermission)(), (0, validateRequest_1.validateRequest)(userOrder_validation_1.confirmUserOrderSchema), userOrder_controller_1.returnBookWithCheck);
router.patch("/:id/remove-blacklist", authorize_1.isAuthenticated, userOrder_controller_1.removeFromBlacklist);
exports.default = router;
